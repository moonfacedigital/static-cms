import type { MediaLibraryAction } from '../actions/mediaLibrary';
import type { CollectionFileWithDefaults, CollectionWithDefaults, MediaField, MediaFile, MediaLibrarInsertOptions, MediaLibraryConfig, MediaLibraryDisplayURL, MediaPath } from '../interface';
export type MediaLibraryState = {
    isVisible: boolean;
    showMediaButton: boolean;
    controlMedia: Record<string, MediaPath>;
    displayURLs: Record<string, MediaLibraryDisplayURL>;
    controlID?: string;
    page?: number;
    files?: MediaFile[];
    config?: MediaLibraryConfig;
    collection?: CollectionWithDefaults;
    collectionFile?: CollectionFileWithDefaults;
    field?: MediaField;
    value?: string | string[];
    alt?: string;
    replaceIndex?: number;
    isLoading?: boolean;
    dynamicSearch?: boolean;
    dynamicSearchActive?: boolean;
    dynamicSearchQuery?: string;
    forImage?: boolean;
    forFolder?: boolean;
    isPersisting?: boolean;
    isDeleting?: boolean;
    hasNextPage?: boolean;
    isPaginating?: boolean;
    insertOptions?: MediaLibrarInsertOptions;
};
declare function mediaLibrary(state: MediaLibraryState | undefined, action: MediaLibraryAction): MediaLibraryState;
export default mediaLibrary;
